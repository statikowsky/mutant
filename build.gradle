group 'org.droba'
version '1.0-SNAPSHOT'

allprojects {
    apply plugin: 'idea'
    idea {
        module {
            outputDir file('build/classes/main')
            testOutputDir file('build/classes/test')
        }
    }
    if(project.convention.findPlugin(JavaPluginConvention)) {
        // Change the output directory for the main and test source sets back to the old path
        sourceSets.main.output.classesDir = new File(buildDir, "classes/main")
        sourceSets.test.output.classesDir = new File(buildDir, "classes/test")
    }
}

buildscript {
    ext.kotlin_version = '1.1.2-2'

    repositories {
        jcenter()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}

subprojects {

    buildscript {
        ext.kotlin_version = '1.1.2-2'

        repositories {
            jcenter()
        }
        dependencies {
            classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        }
    }

    apply plugin: 'java'
    apply plugin: 'kotlin'
    apply plugin: 'idea'

    idea {
        module {
            downloadJavadoc = true
            downloadSources = true
        }
    }

    sourceCompatibility = 1.8

    repositories {
        jcenter()
        maven { url "http://repo.spring.io/libs-snapshot-local" }
    }

    dependencies {
        compile "org.jetbrains.kotlin:kotlin-stdlib-jre8:$kotlin_version"
        compile "org.slf4j:slf4j-api:1.7.21"
        compile 'io.github.microutils:kotlin-logging:1.4.2'
    }

    sourceSets {
        main.kotlin.srcDirs += 'src/main'
    }
}


apply plugin: 'java'
apply plugin: 'kotlin'
apply plugin: 'idea'

idea {
    module {
        downloadJavadoc = true
        downloadSources = true
    }
}

sourceCompatibility = 1.8

repositories {
    jcenter()
}

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    testCompile group: 'junit', name: 'junit', version: '4.11'
}
